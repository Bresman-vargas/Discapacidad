package igu;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import logica.Asignacion;
import logica.Servicio;
import logica.Controladora;

public class MenuSeguimientoImpacto extends javax.swing.JFrame {

    Controladora control = new Controladora();
    /**
     * Creates new form MenuSeguimientoImpacto
     */
    public MenuSeguimientoImpacto() {
        initComponents();
        cargarRelacionesEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        irAtrasBen = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaImpacto = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Seguimiento de Impacto");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        irAtrasBen.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        irAtrasBen.setText("<< Atrás");
        irAtrasBen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        irAtrasBen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                irAtrasBenMouseClicked(evt);
            }
        });
        jPanel1.add(irAtrasBen, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 120, 30));

        jPanel2.setBackground(UIManager.getColor("Component.accentColor"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 10));

        jLabel2.setFont(new java.awt.Font("Bungee", 0, 15)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ACTIVA");
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 40, 90, 20));

        jLabel1.setBackground(UIManager.getColor("Component.accentColor"));
        jLabel1.setFont(new java.awt.Font("Bungee", 0, 15)); // NOI18N
        jLabel1.setForeground(UIManager.getColor("Component.foreground"));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INCLUSIÓN");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 40, 160, 20));

        tablaImpacto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "hla", "hola", "aaaal"
            }
        ));
        jScrollPane1.setViewportView(tablaImpacto);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 960, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void irAtrasBenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_irAtrasBenMouseClicked

        // Crear y mostrar la nueva ventana
        Principal pantalla = new Principal();
        pantalla.setLocationRelativeTo(null);
        pantalla.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_irAtrasBenMouseClicked

    /**
     * @param args the command line arguments
     */
    
    private void cargarRelacionesEnTabla() {
        DefaultTableModel modeloTabla = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Evitar que las celdas sean editables
        }
        };

        // Establecemos los nombres de las columnas
        String[] titulos = {"Id-Asig", "Beneficiario","Discapacidades", "Edad", "Servicio"};
        modeloTabla.setColumnIdentifiers(titulos);

        List<Asignacion> listarAsignaciones = control.traerAsignaciones();

        if (listarAsignaciones != null) {
            for (Asignacion asig : listarAsignaciones) {
                // Obtener el nombre del beneficiario
                String beneficiarioNombre = asig.getBeneficiario() != null ? asig.getBeneficiario().getNombre() : "N/A";

                // Obtener la edad del beneficiario
                String edadBeneficiario = asig.getBeneficiario() != null ? String.valueOf(asig.getBeneficiario().getEdad()) : "N/A";

                // Obtener las discapacidades del beneficiario como lista
                List<String> discapacidades = asig.getBeneficiario() != null ? asig.getBeneficiario().getDiscapacidades() : new ArrayList<>();
                String beneficiarioDiscapacidades = "N/A";
                if (!discapacidades.isEmpty()) {
                    beneficiarioDiscapacidades = String.join(", ", discapacidades);
                }

                // Obtener el nombre del servicio y el responsable (solo el primero)
                String servicioNombre = "N/A";
                if (asig.getServicios() != null && !asig.getServicios().isEmpty()) {
                    Servicio primerServicio = asig.getServicios().get(0);
                    servicioNombre = primerServicio.getNombre(); // Mostrar solo el primer servicio
                }
           

                // Crear un objeto con los datos para la tabla
                Object[] objeto = {asig.getId(),  beneficiarioNombre, beneficiarioDiscapacidades, edadBeneficiario, servicioNombre};
                modeloTabla.addRow(objeto);
            }
        }

        tablaImpacto.setModel(modeloTabla);

        // Evitar que las columnas se reordenen
        tablaImpacto.getTableHeader().setReorderingAllowed(false);
        // Evitar que las columnas se redimensionen
        tablaImpacto.getTableHeader().setResizingAllowed(false);
    
        ajustarAnchoColumnas(tablaImpacto);
        centrarColumnas(tablaImpacto, new int[]{0}); // Puedes ajustar esto según sea necesario
        centrarColumnas(tablaImpacto, new int[]{3});
    }
    
    
    private void ajustarAnchoColumnas(JTable tabla) {
        for (int i = 0; i < tabla.getColumnModel().getColumnCount(); i++) {
        int width = 0; // Ancho inicial
        
        // Calcular el ancho necesario basado en las celdas
        for (int j = 0; j < tabla.getRowCount(); j++) {
            Object value = tabla.getValueAt(j, i);
            if (value != null) {
                width = Math.max(width, value.toString().length());
            }
        }
        // Ajustar el ancho de la columna
        tabla.getColumnModel().getColumn(i).setPreferredWidth(width * 10); // Ajustar el multiplicador según sea necesario
        }
    }   
    
    private void centrarColumnas(JTable tabla, int[] columnas) {
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);

        for (int col : columnas) {
            tabla.getColumnModel().getColumn(col).setCellRenderer(renderer);
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel irAtrasBen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaImpacto;
    // End of variables declaration//GEN-END:variables
}
